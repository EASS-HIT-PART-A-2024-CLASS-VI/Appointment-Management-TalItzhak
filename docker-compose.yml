version: '3.8'

services:
  backend:
    build: 
      context: ./backend
    container_name: appointment_backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      llm_service:
        condition: service_started
    environment:
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./backend:/app
    command: sh -c "python create_db.py && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 1g
    restart: always
    networks:
      - appointment_network

  llm_service:
    build: 
      context: ./llm_service
    container_name: llm_service
    ports:
      - "8001:8001"
    volumes:
      - ./llm_service/app:/app/app  # Changed to only mount the app directory
    environment:
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g
    restart: always
    networks:
      - appointment_network

  db:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      - MYSQL_DATABASE=appointmentdb
      - MYSQL_USER=appointment_user
      - MYSQL_PASSWORD=appointment_password
      - MYSQL_ROOT_PASSWORD=root_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - appointment_network
    healthcheck:
      test: mysqladmin ping -h localhost -u appointment_user -pappointment_password
      interval: 10s
      timeout: 5s
      retries: 10

  frontend:
    build:
      context: ./frontend
    container_name: appointment_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 1g
    restart: always
    networks:
      - appointment_network
    depends_on:
      - backend

networks:
  appointment_network:
    driver: bridge

volumes:
  mysql_data: